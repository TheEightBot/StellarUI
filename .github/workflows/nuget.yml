# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    tags:
      - 'v**'

jobs:
  build:
    runs-on: macos-14
    strategy:
      matrix:
        include:
          - name: Stellar
            project: Stellar/Stellar.csproj
            output: Stellar/bin/Release
          - name: Stellar.Maui
            project: Stellar.Maui/Stellar.Maui.csproj
            output: Stellar.Maui/bin/Release
          - name: Stellar.Maui.PopUp
            project: Stellar.Maui.PopUp/Stellar.Maui.PopUp.csproj
            output: Stellar.Maui.PopUp/bin/Release
          - name: Stellar.Blazor
            project: Stellar.Blazor/Stellar.Blazor.csproj
            output: Stellar.Blazor/bin/Release
          - name: Stellar.Avalonia
            project: Stellar.Avalonia/Stellar.Avalonia.csproj
            output: Stellar.Avalonia/bin/Release
          - name: Stellar.FluentValidation
            project: Stellar.FluentValidation/Stellar.FluentValidation.csproj
            output: Stellar.FluentValidation/bin/Release
          - name: Stellar.DiskDataCache
            project: Stellar.DiskDataCache/Stellar.DiskDataCache.csproj
            output: Stellar.DiskDataCache/bin/Release
          - name: Stellar.SourceGenerators
            project: Stellar.SourceGenerators/Stellar.SourceGenerators.csproj
            output: Stellar.SourceGenerators/bin/Release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Install MAUI Workloads
        run: dotnet workload install maui --ignore-failed-sources
      - name: Semver Parse
        id: version
        uses: release-kit/semver@v1.0.10
      - name: Build ${{ matrix.name }}
        run: dotnet build ${{ matrix.project }}
      - name: Pack ${{ matrix.name }}
        run: dotnet pack --configuration Release /p:AssemblyVersion=${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }} /p:Version=${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }} ${{ matrix.project }}
      - name: Publish ${{ matrix.name }}
        run: dotnet nuget push ${{ matrix.output }}/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json
